// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using firstAPI.DAL;

#nullable disable

namespace firstAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231218133047_changes")]
    partial class changes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("firstAPI.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("brandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("brands");
                });

            modelBuilder.Entity("firstAPI.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorID")
                        .HasColumnType("int");

                    b.Property<double>("DailyPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModelYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorID");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("firstAPI.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("colorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("colors");
                });

            modelBuilder.Entity("firstAPI.Entities.Brand", b =>
                {
                    b.HasOne("firstAPI.Entities.Brand", null)
                        .WithMany("brands")
                        .HasForeignKey("BrandId");
                });

            modelBuilder.Entity("firstAPI.Entities.Car", b =>
                {
                    b.HasOne("firstAPI.Entities.Brand", "brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("firstAPI.Entities.Color", "color")
                        .WithMany()
                        .HasForeignKey("ColorID");

                    b.Navigation("brand");

                    b.Navigation("color");
                });

            modelBuilder.Entity("firstAPI.Entities.Color", b =>
                {
                    b.HasOne("firstAPI.Entities.Color", null)
                        .WithMany("colors")
                        .HasForeignKey("ColorId");
                });

            modelBuilder.Entity("firstAPI.Entities.Brand", b =>
                {
                    b.Navigation("brands");
                });

            modelBuilder.Entity("firstAPI.Entities.Color", b =>
                {
                    b.Navigation("colors");
                });
#pragma warning restore 612, 618
        }
    }
}
